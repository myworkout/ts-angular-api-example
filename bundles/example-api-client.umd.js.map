{
  "version": 3,
  "file": "example-api-client.umd.js",
  "sources": [
    "ng://example-api-client/out/api.module.ts",
    "ng://example-api-client/out/model/teamMember.ts",
    "ng://example-api-client/out/api/api.ts",
    "ng://example-api-client/out/api/user.service.ts",
    "ng://example-api-client/out/api/team.service.ts",
    "ng://example-api-client/out/configuration.ts",
    "ng://example-api-client/out/variables.ts",
    "ng://example-api-client/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { TeamService } from './api/team.service';\nimport { UserService } from './api/user.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    TeamService,\n    UserService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface TeamMember { \n    /**\n     * team member id\n     */\n    id?: number;\n    /**\n     * team member name\n     */\n    name?: string;\n    role?: TeamMember.RoleEnum;\n}\nexport namespace TeamMember {\n    export type RoleEnum = 'member' | 'captain';\n    export const RoleEnum = {\n        Member: 'member' as RoleEnum,\n        Captain: 'captain' as RoleEnum\n    };\n}\n",
    "export * from './team.service';\nimport { TeamService } from './team.service';\nexport * from './user.service';\nimport { UserService } from './user.service';\nexport const APIS = [TeamService, UserService];\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { GetUsersResponse } from '../model/getUsersResponse';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n    protected basePath = 'http://localhost:8080';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n\n        if (configuration) {\n            this.configuration = configuration;\n            this.configuration.basePath = configuration.basePath || basePath || this.basePath;\n\n        } else {\n            this.configuration.basePath = basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get list of registered users\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(observe?: 'body', reportProgress?: boolean): Observable<GetUsersResponse>;\n    public getUsers(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetUsersResponse>>;\n    public getUsers(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetUsersResponse>>;\n    public getUsers(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetUsersResponse>(`${this.configuration.basePath}/users`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { GetTeamInvitationsResponse } from '../model/getTeamInvitationsResponse';\nimport { GetTeamMembersResponse } from '../model/getTeamMembersResponse';\nimport { GetTeamsResponse } from '../model/getTeamsResponse';\nimport { UpdateTeamMembersInput } from '../model/updateTeamMembersInput';\nimport { UpdateTeamMembersResponse } from '../model/updateTeamMembersResponse';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n    protected basePath = 'http://localhost:8080';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n\n        if (configuration) {\n            this.configuration = configuration;\n            this.configuration.basePath = configuration.basePath || basePath || this.basePath;\n\n        } else {\n            this.configuration.basePath = basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get list of invitations to a team\n     * \n     * @param teamId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeamInvitations(teamId: number, observe?: 'body', reportProgress?: boolean): Observable<GetTeamInvitationsResponse>;\n    public getTeamInvitations(teamId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamInvitationsResponse>>;\n    public getTeamInvitations(teamId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamInvitationsResponse>>;\n    public getTeamInvitations(teamId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling getTeamInvitations.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamInvitationsResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/invitations`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of members in teams\n     * \n     * @param teamId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeamMembers(teamId: number, observe?: 'body', reportProgress?: boolean): Observable<GetTeamMembersResponse>;\n    public getTeamMembers(teamId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamMembersResponse>>;\n    public getTeamMembers(teamId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamMembersResponse>>;\n    public getTeamMembers(teamId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling getTeamMembers.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamMembersResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/members`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of teams\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeams(observe?: 'body', reportProgress?: boolean): Observable<GetTeamsResponse>;\n    public getTeams(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamsResponse>>;\n    public getTeams(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamsResponse>>;\n    public getTeams(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamsResponse>(`${this.configuration.basePath}/teams`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update members of a team\n     * \n     * @param teamId \n     * @param UpdateTeamMembersInput \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'body', reportProgress?: boolean): Observable<UpdateTeamMembersResponse>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UpdateTeamMembersResponse>>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UpdateTeamMembersResponse>>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling updateTeamMembers.');\n        }\n        if (UpdateTeamMembersInput === null || UpdateTeamMembersInput === undefined) {\n            throw new Error('Required parameter UpdateTeamMembersInput was null or undefined when calling updateTeamMembers.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<UpdateTeamMembersResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/members`,\n            UpdateTeamMembersInput,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n",
    "export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "HttpClient",
    "Optional",
    "SkipSelf",
    "NgModule",
    "http",
    "TeamMember",
    "Inject",
    "Injectable",
    "tslib_1.__values",
    "HttpHeaders",
    "InjectionToken"
  ],
  "mappings": "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"
}
