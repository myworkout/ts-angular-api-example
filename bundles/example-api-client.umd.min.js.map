{
  "version": 3,
  "file": "example-api-client.umd.min.js",
  "sources": [
    "ng://example-api-client/node_modules/tslib/tslib.es6.js",
    "ng://example-api-client/out/variables.ts",
    "ng://example-api-client/out/configuration.ts",
    "ng://example-api-client/out/api/team.service.ts",
    "ng://example-api-client/out/api/user.service.ts",
    "ng://example-api-client/out/api/api.ts",
    "ng://example-api-client/out/model/teamMember.ts",
    "ng://example-api-client/out/api.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n",
    "export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { GetTeamInvitationsResponse } from '../model/getTeamInvitationsResponse';\nimport { GetTeamMembersResponse } from '../model/getTeamMembersResponse';\nimport { GetTeamsResponse } from '../model/getTeamsResponse';\nimport { UpdateTeamMembersInput } from '../model/updateTeamMembersInput';\nimport { UpdateTeamMembersResponse } from '../model/updateTeamMembersResponse';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n    protected basePath = 'http://localhost:8080/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n\n        if (configuration) {\n            this.configuration = configuration;\n            this.configuration.basePath = configuration.basePath || basePath || this.basePath;\n\n        } else {\n            this.configuration.basePath = basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get list of invitations to a team\n     * \n     * @param teamId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeamInvitations(teamId: number, observe?: 'body', reportProgress?: boolean): Observable<GetTeamInvitationsResponse>;\n    public getTeamInvitations(teamId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamInvitationsResponse>>;\n    public getTeamInvitations(teamId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamInvitationsResponse>>;\n    public getTeamInvitations(teamId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling getTeamInvitations.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamInvitationsResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/invitations`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of members in teams\n     * \n     * @param teamId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeamMembers(teamId: number, observe?: 'body', reportProgress?: boolean): Observable<GetTeamMembersResponse>;\n    public getTeamMembers(teamId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamMembersResponse>>;\n    public getTeamMembers(teamId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamMembersResponse>>;\n    public getTeamMembers(teamId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling getTeamMembers.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamMembersResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/members`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of teams\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeams(observe?: 'body', reportProgress?: boolean): Observable<GetTeamsResponse>;\n    public getTeams(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetTeamsResponse>>;\n    public getTeams(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetTeamsResponse>>;\n    public getTeams(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetTeamsResponse>(`${this.configuration.basePath}/teams`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update members of a team\n     * \n     * @param teamId \n     * @param UpdateTeamMembersInput \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'body', reportProgress?: boolean): Observable<UpdateTeamMembersResponse>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UpdateTeamMembersResponse>>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UpdateTeamMembersResponse>>;\n    public updateTeamMembers(teamId: number, UpdateTeamMembersInput: UpdateTeamMembersInput, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (teamId === null || teamId === undefined) {\n            throw new Error('Required parameter teamId was null or undefined when calling updateTeamMembers.');\n        }\n        if (UpdateTeamMembersInput === null || UpdateTeamMembersInput === undefined) {\n            throw new Error('Required parameter UpdateTeamMembersInput was null or undefined when calling updateTeamMembers.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<UpdateTeamMembersResponse>(`${this.configuration.basePath}/teams/${encodeURIComponent(String(teamId))}/members`,\n            UpdateTeamMembersInput,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { GetUsersResponse } from '../model/getUsersResponse';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n    protected basePath = 'http://localhost:8080/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n\n        if (configuration) {\n            this.configuration = configuration;\n            this.configuration.basePath = configuration.basePath || basePath || this.basePath;\n\n        } else {\n            this.configuration.basePath = basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get list of registered users\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(observe?: 'body', reportProgress?: boolean): Observable<GetUsersResponse>;\n    public getUsers(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GetUsersResponse>>;\n    public getUsers(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GetUsersResponse>>;\n    public getUsers(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<GetUsersResponse>(`${this.configuration.basePath}/users`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n",
    "export * from './team.service';\nimport { TeamService } from './team.service';\nexport * from './user.service';\nimport { UserService } from './user.service';\nexport const APIS = [TeamService, UserService];\n",
    "/**\n * Myworkout API\n * Documentation for Myworkout API. \n *\n * OpenAPI spec version: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface TeamMember { \n    /**\n     * team member's user id\n     */\n    user_id?: number;\n    /**\n     * team member name\n     */\n    name?: string;\n    role?: TeamMember.RoleEnum;\n}\nexport namespace TeamMember {\n    export type RoleEnum = 'member' | 'captain';\n    export const RoleEnum = {\n        Member: 'member' as RoleEnum,\n        Captain: 'captain' as RoleEnum\n    };\n}\n",
    "import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { TeamService } from './api/team.service';\nimport { UserService } from './api/user.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    TeamService,\n    UserService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n"
  ],
  "names": [
    "__values",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "call",
    "next",
    "length",
    "value",
    "done",
    "BASE_PATH",
    "InjectionToken",
    "Configuration",
    "configurationParameters",
    "this",
    "apiKeys",
    "username",
    "password",
    "accessToken",
    "basePath",
    "withCredentials",
    "prototype",
    "selectHeaderContentType",
    "contentTypes",
    "_this",
    "undefined",
    "type",
    "find",
    "x",
    "isJsonMime",
    "selectHeaderAccept",
    "accepts",
    "mime",
    "jsonMime",
    "RegExp",
    "test",
    "toLowerCase",
    "TeamService",
    "httpClient",
    "configuration",
    "defaultHeaders",
    "HttpHeaders",
    "canConsumeForm",
    "consumes",
    "consumes_1",
    "tslib_1.__values",
    "consumes_1_1",
    "getTeamInvitations",
    "teamId",
    "observe",
    "reportProgress",
    "Error",
    "headers",
    "httpHeaderAcceptSelected",
    "set",
    "get",
    "encodeURIComponent",
    "String",
    "getTeamMembers",
    "getTeams",
    "updateTeamMembers",
    "UpdateTeamMembersInput",
    "httpContentTypeSelected",
    "put",
    "Injectable",
    "args",
    "providedIn",
    "HttpClient",
    "decorators",
    "Optional",
    "Inject",
    "UserService",
    "consumes_2",
    "consumes_2_1",
    "getUsers",
    "APIS",
    "TeamMember",
    "RoleEnum",
    "Member",
    "Captain",
    "ApiModule",
    "parentModule",
    "http",
    "forRoot",
    "configurationFactory",
    "ngModule",
    "providers",
    "provide",
    "useFactory",
    "NgModule",
    "imports",
    "declarations",
    "exports",
    "SkipSelf",
    "csv",
    "tsv",
    "ssv",
    "pipes"
  ],
  "mappings": "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"
}
